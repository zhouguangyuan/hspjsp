package com.hsp.utils;

import java.io.IOException;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.util.Properties;

//这是一个工具类，专门用于得到连接和关闭连接
public class DBUtil {
	// 定义数据库连接
	private static Connection ct = null;
	// 定义数据库操作类
	private static PreparedStatement ps = null;
	// 输出数据类
	private static ResultSet rs = null;

	// 连接数据库参数
	private static String url = "";
	private static String drivername = "";
	private static String username = "";
	private static String password = "";
	private static InputStream fiS;

	// 加载驱动，static块（只能执行一次）
	static {
		Properties pp = new Properties();
		try {
			fiS = SqlHelper.class.getClassLoader().getResourceAsStream(
					"db.properties"); // 注意放在src目录下，
			pp.load(fiS);
			// 属性文件读取信息
			drivername = pp.getProperty("dbDriver");
			username = pp.getProperty("dbUserName");
			password = pp.getProperty("dbPassWord");
			url = pp.getProperty("dbUrl");
			Class.forName(drivername);
			System.out.println("得到数据源");
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			try {
				fiS.close();
			} catch (IOException e) {
				e.printStackTrace();
			}
		}
	}

	// 静 态方式取得链接
	public Connection getConn() {
		try {
			ct = DriverManager.getConnection(username, url, passwd);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return ct;
	}

	// 释放资源
	public void close() {
		if (rs != null) {
			try {
				rs.close();
			} catch (SQLException e) {
				e.printStackTrace();
			}
		}
		if (ps != null) {
			try {
				ps.close();
			} catch (SQLException e) {
				e.printStackTrace();
			}
		}
		if (ct != null) {
			try {
				ct.close();
			} catch (SQLException e) {
				e.printStackTrace();
			}
		}
	}

}
